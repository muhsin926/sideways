.approach {
  padding: 4rem 1rem;
  position: relative;
  max-width: 1968px;
  margin: auto;
  z-index: 2;
  background: var(--background);
}

.header {
  margin-bottom: 4rem;
  text-align: center;
}

.contentRow {
  display: flex;
  align-items: center;
  gap: 4rem;
  margin: 6rem 0;
}

.leftContent,
.rightContent {
  flex: 1;
}

.leftContent h3,
.rightContent h3 {
  font-size: clamp(1.5rem, 4.5vw, 2.5rem);
  margin-bottom: clamp(0.88rem, 1.5vw, 1rem);
  line-height: 1.2;
}

.leftContent p,
.rightContent p {
  font-size: clamp(.88rem, 3vw, 1.2rem);
  line-height: 1.6;
}

.approachImage {
  width: 100%;
  height: 100%;
  border-radius: 1.5rem;
  object-fit: cover;
}


.leftContent {
  height: fit-content;
}

.rightContent img {
  transform: translate(369.5px, 0px) rotate(10deg);
  animation: sliding linear forwards;
  animation-timeline: view(y);
  animation-range: entry;
  animation-range-end: 75vh;
}

.leftContent img {
  transform: translate(-369.5px, 0px) rotate(-10deg);
  animation: leftSliding linear forwards;
  animation-timeline: view(y);
  animation-range: entry;
  animation-range-end: 75vh;
}

.contentRow h3,
.contentRow p {
  transform: translate(0%, 55%);
  animation: downToUp linear forwards;
  animation-timeline: view(y);
  animation-range: entry;
  animation-range-end: 75vh;
}

.contentRow:last-child {
  margin-bottom: 0;
}

@keyframes downToUp {
  to {
    transform: translate(0%, -5%);
  }
}

@keyframes sliding {
  to {
    transform: translate(0%, -5%);
  }
}

@keyframes leftSliding {
  to {
    transform: translate(0px, 0px) rotate(0deg);
  }
}

@media (max-width: 768px) {
  .approach {
    flex-direction: column;
    padding: 3rem 1rem;
  }
  .leftContent {
    position: relative;
    top: unset;
  }
  .numberCircle {
    width: 30px;
    height: 30px;
  }
  .content {
    margin-left: 0;
    width: 100%;
    height: 100%;
  }
  .contentRow {
    flex-direction: column;
    gap: 2rem;
    margin: 3rem 0;
  }
  
  .contentRow:nth-child(odd) {
    flex-direction: column;
  }
  
  .contentRow:nth-child(even) {
    flex-direction: column-reverse;
  }
}
@keyframes perspectives {
  to {
    opacity: 1;
    transform: perspective(1200px) rotateX(0deg);
  }
}